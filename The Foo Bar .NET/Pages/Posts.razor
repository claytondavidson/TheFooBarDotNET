@page "/posts"

@using Domain
@using Application.Interfaces

@inject IPostData _db

<h3>Create a Post</h3>
<EditForm Model="@_newPost" OnValidSubmit="@InsertPost">
    <DataAnnotationsValidator />
    <ValidationSummary />
        
    <InputText id="title" @bind-Value="_newPost.Title" />
    <InputText id="body" @bind-Value="_newPost.Body" />
    <InputCheckbox id="published" @bind-Value="_newPost.Published" />
        
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h3>Posts</h3>

@if (_posts is null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var post in _posts)
    {
        <div>
            <a href="/posts/@post.Id">@post.Title</a>
        </div>
    }
}

@code {
    private List<PostModel> _posts;
    private PostDisplayModel _newPost = new();
    
    protected override async Task OnInitializedAsync()
    {
        _posts = await _db.GetPosts();
    }

    private async Task InsertPost()
    {
        var p = new PostDisplayModel
        {
            Title = _newPost.Title,
            Body = _newPost.Body,
            Published = _newPost.Published
        };
        
        await _db.CreatePost(p.Title, p.Body, p.Published);

        _posts = await _db.GetPosts();

        _newPost = new PostDisplayModel();
    }
}